name: Main test
on: [push]
jobs:
  linter_for_main:
    name: Flake8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Установка Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.6
      - name: Установка зависимостей
        run: |
          python -m pip install --upgrade pip
          pip install flake8==3.9.0 wemake-python-styleguide==0.15.3 bandit==1.7.2
      - name: Flake8
        run: flake8 .

  test:
    name: Test with PostgreSQL and MinIO
    runs-on: ubuntu-latest

    env:
      DJANGO_SETTINGS_MODULE: video.settings
      MINIO_BUCKET_NAME: djangob
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x


      - name: Start PostgreSQL service
        run: |
          docker run -d --name project -p 38700:5432 \
          -e POSTGRES_USER=sirius \
          -e POSTGRES_PASSWORD=123 \
          -e POSTGRES_DB=videos_db \
          postgres

      - name: Start MinIO service
        run: |
          docker run -d -p 9000:9000 -p 9001:9001 \
          -e "MINIO_ROOT_USER=sirius" \
          -e "MINIO_ROOT_PASSWORD=123" \
          minio/minio server /data --console-address ":9001"
        env:
          PG_DBNAME: videos_db
          PG_USER: sirius
          PG_PASSWORD: 123
          PG_HOST: 127.0.0.1
          PG_PORT: 38700
          MINIO_ACCESS_KEY_ID: user
          MINIO_SECRET_ACCESS_KEY: password
          MINIO_STORAGE_BUCKET_NAME: djangob
          MINIO_API: http://0.0.0.0:9000

      - name: Wait for services to be ready
        run: sleep 10

      - name: Setup MinIO bucket
        run: |
          wget https://dl.minio.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          mc alias set minio http://localhost:9000 user password
          mc mb minio/djangob

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Apply migrations
        run: python manage.py migrate

      - name: Run tests
        run: python manage.py test tests