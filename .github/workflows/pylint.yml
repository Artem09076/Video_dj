name: Main test
on: [push]
jobs:
  linter_for_main:
    name: Flake8
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Установка Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.6
    - name: Установка зависимостей
      run: |
        python -m pip install --upgrade pip
        pip install flake8==3.9.0 wemake-python-styleguide==0.15.3 bandit==1.7.2
    - name: Flake8
      run: flake8 .

  tests:
    name: Tests Django
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: sirius
          POSTGRES_PASSWORD: 123
          POSTGRES_DB: videos_db
        ports:
        - 38700:5432
      minio:
        image: minio/minio
        env:
          MINIO_ACCESS_KEY: user
          MINIO_SECRET_KEY: password
        ports:
          - "9000:9000"

    steps:
    - uses: actions/checkout@v2
    - name: Установка Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.6
    - name: Установка зависимостей
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install numpy
    - name: Install mc (MinIO Client)
      run: |
        wget https://dl.min.io/client/mc/release/linux-amd64/mc
        chmod +x mc
        mv mc /usr/local/bin/
    - name: Wait for services to be ready
      run: |
        apt-get install -y netcat
        while ! nc -z localhost 9000; do   
          sleep 1
        done
    - name: Configure mc and create bucket
      run: |
        mc alias set myminio http://localhost:9000 user password
        mc mb myminio/djangob
    - name: Run tests
      env:
        PG_HOST: 127.0.0.1
        PG_PORT: 38700
        PG_USER: sirius
        PG_PASSWORD: 123
        PG_DBNAME: videos_db
        MINIO_ACCESS_KEY_ID: user
        MINIO_SECRET_ACCESS_KEY: password
        MINIO_STORAGE_BUCKET_NAME: djangob
        MINIO_API: http://0.0.0.0:9000
      run: |
        python3 manage.py test tests
